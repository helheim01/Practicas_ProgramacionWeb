<!--
    ============================================================================
    WEB.XML - DESCRIPTOR DE DESPLIEGUE (Deployment Descriptor)
    ============================================================================
    
    ¿QUÉ ES web.xml?
    • Es el archivo de configuración principal de una aplicación web Java
    • Le dice al servidor web (Tomcat) cómo debe comportarse tu aplicación
    
    ¿PARA QUÉ SIRVE?
    • Mapea URLs a clases Java (servlets)
    • Define parámetros de configuración
    • Establece filtros, listeners, páginas de error
    • Configura seguridad y recursos
    
    ============================================================================
-->
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         version="4.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee
                             http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd">

    <servlet>
        <servlet-name>HolaServlet</servlet-name> <!--Le digo que existe una clase que se llama HolaServlet-->
        <servlet-class>com.ejemplo.HolaServlet</servlet-class> <!--Le digo en que ruta está la clase-->
    </servlet>

   
    <servlet-mapping>
        <servlet-name>HolaServlet</servlet-name> <!--Le digo que agarre el servlet que definí como 'HolaServlet'"-->
        <url-pattern>/hola</url-pattern> <!--Le aclaro bajo qué ruta debe activar el servlet-->
    </servlet-mapping>

</web-app>

 <!-- 
        FLUJO COMPLETO:
        1. Usuario va a: http://localhost:8080/servletproject/hola
        2. Servidor ve "/hola" en la URL
        3. Busca en web.xml qué servlet maneja "/hola"
        4. Encuentra que es "HolaServlet" 
        5. Ejecuta la clase com.ejemplo.HolaServlet
        6. El método doGet() o doPost() se ejecuta
        7. Se envía la respuesta al navegador
    -->